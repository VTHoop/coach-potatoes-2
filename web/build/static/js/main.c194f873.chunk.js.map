{"version":3,"sources":["logo.png","Components/PlayerStatus.js","Components/Game.js","Components/GameRow.js","Components/GameCard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","PlayerStatus","handleAttendanceUpdate","event","playerStatus","_this","props","player","attendance","onStatusUpdate","handleBeveragesUpdate","checked","beverages","this","react_default","a","createElement","number","name","className","ToggleButtonGroup_default","value","exclusive","onChange","ToggleButton_default","Switch_default","color","Component","AttendanceDialog","handleUpdate","foundIndex","findIndex","oldPlayer","_id","updateAttendance","_this2","Dialog_default","fullWidth","open","gameDialogStatus","onClose","aria-labelledby","DialogTitle_default","id","DialogContent_default","map","Components_PlayerStatus","key","DialogActions_default","Button_default","onClick","onSave","GameRow","handleClickOpen","onRowClick","TableRow_default","TableCell_default","date","time","venue","opponent","GameCard","context","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","apiBase","attendanceRoute","onAttendanceUpdate","setState","game","gameDialogActive","currentGame","axios","get","concat","then","res","data","sort","compareNums","yesNoSort","handleClose","handleSave","put","state","response","console","log","catch","error","completeToBottom","games","final","completeGames","filter","push","b","Number","x","toLowerCase","y","sortedGames","_this3","Fragment","alt","src","require","Table_default","cellSpacing","TableHead_default","TableBody_default","Components_GameRow","Components_Game","App","GameCard_GameCard","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c194f873.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ff6eef00.png\";","import React, { Component } from \"react\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nclass PlayerStatus extends Component {\r\n  handleAttendanceUpdate = (event, playerStatus) => {\r\n    this.props.player.attendance = playerStatus;\r\n    this.props.onStatusUpdate(this.props.player);\r\n  };\r\n\r\n  handleBeveragesUpdate = (event, checked) => {\r\n    this.props.player.beverages = checked;\r\n    this.props.onStatusUpdate(this.props.player);\r\n  };\r\n\r\n  render() {\r\n    const { player } = this.props;\r\n    const playerStatus = player.attendance;\r\n\r\n    return (\r\n      <tr>\r\n        <td>{player.player.number}</td>\r\n        <td>{player.player.name}</td>\r\n        <td className=\"toggleContainer\">\r\n          <ToggleButtonGroup\r\n            value={playerStatus}\r\n            exclusive\r\n            onChange={this.handleAttendanceUpdate}\r\n          >\r\n            <ToggleButton value=\"Yes\">Yes</ToggleButton>\r\n            <ToggleButton value=\"--\">--</ToggleButton>\r\n            <ToggleButton value=\"No\">No</ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </td>\r\n        <td>\r\n          <Switch\r\n            checked={player.beverages}\r\n            onChange={this.handleBeveragesUpdate}\r\n            color=\"primary\"\r\n          />\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayerStatus;\r\n","import React, {Component} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nimport \"./Game.css\";\r\nimport PlayerStatus from \"./PlayerStatus\";\r\n\r\n\r\n\r\nclass AttendanceDialog extends Component {\r\n\r\n  handleUpdate = (player) => {\r\n    var foundIndex = this.props.attendance.findIndex(oldPlayer => oldPlayer._id === player._id);\r\n    this.props.attendance[foundIndex] = player;\r\n    this.props.updateAttendance(this.props.attendance);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          fullWidth={true}\r\n          open={this.props.gameDialogStatus}\r\n          onClose={this.props.onClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Game Attendance</DialogTitle>\r\n          <DialogContent>\r\n            <table className=\"f6 w-100 mw8 center\">\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Name</th>\r\n                  <th>Status</th>\r\n                  <th>Beers?</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.props.attendance.map(player => (\r\n                  <PlayerStatus\r\n                    key={player._id}\r\n                    player={player}\r\n                    onStatusUpdate={this.handleUpdate}\r\n                  />\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.props.onClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.props.onSave} color=\"primary\">\r\n              Save\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AttendanceDialog;\r\n","import React, { Component } from \"react\";\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nclass GameRow extends Component {\r\n  handleClickOpen = () => {\r\n    this.props.onRowClick(this.props.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <TableRow\r\n        className=\"stripe-green grow\"\r\n        onClick={this.handleClickOpen}\r\n      >\r\n        <TableCell className=\"pa3\">{this.props.value.date}</TableCell>\r\n        <TableCell className=\"pa3\">{this.props.value.time}</TableCell>\r\n        <TableCell className=\"pa3\">{this.props.value.venue}</TableCell>\r\n        <TableCell className=\"pa3\">{this.props.value.opponent}</TableCell>\r\n      </TableRow>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameRow;\r\n","import React, { Component } from \"react\";\r\nimport \"./GameCard.css\";\r\nimport \"../App.css\";\r\nimport AttendanceDialog from \"./Game\";\r\nimport GameRow from \"./GameRow\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default class GameCard extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.state = {\r\n      games: [],\r\n      attendance: [],\r\n      gameDialogActive: false,\r\n      currentGame: '',\r\n    };\r\n  }\r\n  apiBase = \"http://68.183.30.13:4990\";\r\n  attendanceRoute = \"attendance\";\r\n\r\n  componentDidMount() {\r\n    axios.get(`${this.apiBase}/`).then(res => {\r\n      const games = res.data;\r\n      const sortedGames = this.completeToBottom(games);\r\n      this.setState({ games: sortedGames });\r\n    });\r\n  }\r\n\r\n  onAttendanceUpdate = (attendance) => {\r\n    this.setState({ attendance });\r\n  };\r\n\r\n\r\n  onRowClick = game => {\r\n    this.setState({ gameDialogActive: true });\r\n    this.setState({ currentGame: game });\r\n    axios\r\n      .get(`${this.apiBase}/${this.attendanceRoute}/${game._id}`)\r\n      .then(res => {\r\n        const attendance = res.data;\r\n        attendance.sort(this.compareNums);\r\n        attendance.sort(this.yesNoSort);\r\n        this.setState({ attendance });\r\n      });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ gameDialogActive: false });\r\n  };\r\n\r\n  handleSave = () => {\r\n    axios.put(`${this.apiBase}/${this.attendanceRoute}/${this.state.currentGame._id}`, this.state.attendance)\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n    this.setState({ gameDialogActive: false });\r\n  }\r\n\r\n  completeToBottom = (games) => {\r\n    let final = []; \r\n    const completeGames = games.filter(game => game.time === 'Complete');\r\n    const openGames = games.filter(game => game.time !== 'Complete');\r\n    openGames.map(game => final.push(game));\r\n    completeGames.map(game => final.push(game));\r\n    return final; \r\n  }\r\n\r\n  compareNums = (a, b) => {\r\n    if (Number(a.player.number) < Number(b.player.number)) return -1;\r\n    if (Number(a.player.number) > Number(b.player.number)) return 1;\r\n    return 0;\r\n  };\r\n\r\n  yesNoSort = (a, b) => {\r\n    var x = a.attendance.toLowerCase();\r\n    var y = b.attendance.toLowerCase();\r\n    return ((x < y) ? 1 : ((x > y) ? -1 : 0));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <div className=\"f6 w-100 mw8 center\">\r\n          <img\r\n            alt=\"team_logo\"\r\n            className=\"logo center\"\r\n            src={require(\"../logo.png\")}\r\n          />\r\n        </div>\r\n        <div className=\"pa4\">\r\n          <div className=\"overflow-auto\">\r\n            <Table className=\"f6 w-100 mw8 center\" cellSpacing=\"0\">\r\n              <TableHead>\r\n                <TableRow className=\"stripe-dark\">\r\n                  <TableCell className=\"table-header pa3 bg-white\">Date</TableCell>\r\n                  <TableCell className=\"table-header tl pa3 bg-white\">Time</TableCell>\r\n                  <TableCell className=\"table-header tl pa3 bg-white\">Location</TableCell>\r\n                  <TableCell className=\"table-header tl pa3 bg-white\">Opponent</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody className=\"lh-copy\">\r\n                {this.state.games.map(game => (\r\n                  <GameRow\r\n                    key={game._id}\r\n                    value={game}\r\n                    onRowClick={this.onRowClick}\r\n                  />\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </div>\r\n        <AttendanceDialog\r\n          gameDialogStatus={this.state.gameDialogActive}\r\n          attendance={this.state.attendance}\r\n          onClose={this.handleClose}\r\n          onSave={this.handleSave}\r\n          updateAttendance={this.onAttendanceUpdate}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport GameCard from \"./Components/GameCard\";\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <GameCard />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}